lapply(  m  ,function(y) y%*%t(y) )
str(m)
m<-split(vote, rep(1:ncol(vote), each = nrow(vote)))
m<- lapply(  m  ,function(y) as.matrix(y)%*%t(as.matrix(y)) )
str(m)
m<-1/N * Reduce( '+' , lapply(
split(DM, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
M[1:5,1:5]
ncol(vote)
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,1]) %*% as.matrix(t(vote[,1]))  }
m[1]
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
m[1]
for(i in 1:N){m[[i]]<-as.matrix(DM[,i]) %*% as.matrix(t(DM[,i]))  }
m
m<-Reduce('+',m)
m[1:5,1:5]
1/N*m<-Reduce('+',m)
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
for(i in 1:N){m[[i]]<-as.matrix(DM[,i]) %*% as.matrix(t(DM[,i]))  }
m<-1/N * Reduce('+',m)
m[1:5,1:5]
for(i in 1:N){m[[i]]<-as.matrix(t(DM[,i])) %*% as.matrix((DM[,i]))  }
m<-1/N * Reduce('+',m)
m[1:5,1:5]
m<-split(vote, rep(1:ncol(vote), each = nrow(vote)))
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(t(DM[,i])) %*% as.matrix((DM[,i]))  }
m<-1/N * Reduce('+',m)
m[1:5,1:5]
m<-list()
for(i in 1:N){m[[i]]<- DM[,i]  %*% t(DM[,i]) }
m<-1/N * Reduce('+',m)
m[1:5,1:5]
M[1:5,1:5]
m<-1/N * Reduce( '+' , lapply(
split(DM, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
m<-1/N * Reduce('+',m)
m
m[1:5,1:5]
M[1:5,1:5]
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
m[1:5,1:5]
m[[1]][1:5,1:5]
mm
dim(m[[1]])
mm<-matrix(0,542,542)
for(i in 1:N){ mm<-mm+m[[i]] }
mm[1:5,1:5]
1/100*mm[1:5,1:5]
m[1:5,1:5]
M[1:5,1:5]
options(digits=12)
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
str(m)
m[[1]][1:5,1:5]
dim(m[[1]])
mm<-matrix(0,542,542)
for(i in 1:N){ mm<-mm+m[[i]] }
1/100*mm[1:5,1:5]
as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))
round(M[1:5,1:5] ,2)
a_start<-8 #param a is the y value when x=0
b_start<-2*log(2)/a_start #b is the decay rate
a_start
b_start
list(a=a_start,b=b_start)
b1
b1<-c(96, .009, 103, 106, 18, 72, 151, 18)
as.list(b1)
rm(list = ls())
df <- read.table("non_linear_1.txt", header=T)
head(df)
b<-c(96, .009, 103, 106, 1000, 72, 151, 1000)
hessian.L
H<-hessian.L(df$x, df$y, b)
Q<-eigen(H)$vectors
D<-eigen(H)$values * diag(dim(H)[1])
rm(H);options(scipen= 999)
hessian.L
source("nonlinear.R")
b<-c(96, .009, 103, 106, 1000, 72, 151, 1000)
rm(H);options(scipen= 999)
hessian.L
H<-hessian.L(df$x, df$y, b)
H
eigen(H)$values
A<-H+ diag(
A<-H+ diag(dim(H)[1])*(-min(eigen(H)$values )+1)
eigen(A)$values
Q<-eigen(H)$vector
Q
D
DD
DD<-diag(dim(H)[1])* eigen(H)$values
DD
Q %*% DD %*% t(Q)
H
QDQ<-Q %*% DD %*% t(Q)
Q %*% DD %*% t(Q)
DD
(Q %*% DD %*% t(Q))  + (diag(dim(H)[1]) * -140.907587459)
(Q %*% (DD+ (diag(dim(H)[1]) * -140.907587459) ) %*% t(Q))
(Q %*% (DD+ (diag(dim(H)[1]) * -140.907587459) ) %*% t(Q))
QDQ+(diag(dim(H)[1]) * -140.907587459)
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
dim( cov(DM) )
N<-ncol(votes[,-1])
M<-1/N*  t( DM ) %*% DM
m<-split(vote, rep(1:ncol(vote), each = nrow(vote)))
M<-1/N*  t( DM ) %*% DM
m<-1/N * Reduce( '+' , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
(99/100*cov(DM)[1:5,1:5] ) - round(M[1:5,1:5] ,2)
round(99/100*cov(DM)[1:5,1:5],2 ) - round(M[1:5,1:5] ,2)
all(( round(99/100*cov(DM)[1:5,1:5],2 ) - round(M[1:5,1:5] ,2))==0)
all(( round(99/100*cov(DM)[1:5,1:5],2 ) - m )==0)
m
m<-1/N * Reduce( '+' , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
all(( round(99/100*cov(DM)[1:5,1:5],2 ) - m )==0)
all(( round(99/100*cov(DM) ,2 ) - round(M ,2))==0)
( round(99/100*cov(DM) ,2 ) - round(M ,2)
)
round(99/100*cov(DM) ,2 )
round(M ,2)
round(99/100*cov(DM) ,2 )
round(99/100*cov(DM) ,2 ) - round(M ,2)
all( ( round(99/100*cov(DM) ,2 ) - round(M ,2) )==0)
all( (  (99/100*cov(DM)   ) - M ) ==0)
all( (  round((99/100*cov(DM)) - M),2 ) ==0)
(  round((99/100*cov(DM)) - M),2 )
round((99/100*cov(DM)) - M
round((99/100*cov(DM)) - M)
round((99/100*cov(DM)) - M),2 )
(99/100*cov(DM)  - M)
round( (99/100*cov(DM)  - M),2 )
all( ( round( (99/100*cov(DM)  - M),2 )
) ==0)
all( ( round( (99/100*cov(DM)  - M),2 )  ) ==0)
all( ( round( (99/100*cov(DM)  - M),12 )  ) ==0)
M-m
round(M-m,12)
all( (round(M-m,12)) ==0)
all( (round(M-m,2)) ==0)
all( (round(M-m,3)) ==0)
round(M-m,3)
which(round(M-m,3) > 0)
round(M-m,3)[554,]
round(M-m,3)
all( ( round(round(M[1:5,1:5] ,2)-m,3) ) ==0)
all( ( round(round(M  ,2)-m,3) ) ==0)
all( ( round(round(M  ,2)-m,1) ) ==0)
L<-function(x,y,b){sum((y-pred(x,b))^2)}
curve(L, from = 0, to=100)
curve(L(df$x,df$y,b), from = 0, to=100)
b1<-c(96, .009, 103, 106, 18, 72, 151, 18)
df
dat<-read.table("non_linear_1.txt",header=T)
Ly<-function(x ){sum((dat$y-pred(x,b1))^2)}
curve(L , from = 0, to=100)
curve(L(1:100) , from = 0, to=100)
curve(Ly(1:100) , from = 0, to=100)
Ly(1:100)
pred<-function(x,b){(  b[1]*exp(-b[2]*x) + b[3]*exp( -((x-b[4])^2) /b[5]^2 ) +
b[6]*exp( -((x-b[7])^2) /b[8]^2 ) ) }
Ly<-function(x ){sum((dat$y-pred(x,b1))^2)}
curve(Ly(1:100) , from = 0, to=100)
Ly(1:100)
Ly<-function(x ){sum((dat$y-pred(x,b1))^2)}
b1
dat$y
length(dat$y)
curve(Ly( 1:250) , from = 0, to=100)
Ly(1:250)
pred(x,b1)
Ly<-function(1 ){
sum((dat$y-pred(x,b1))^2)
}
curve(Ly( 1:250) , from = 0, to=100)
Ly<-function(x){
sum((dat$y-pred(x,b1))^2)
}
curve(Ly( 1:250) , from = 0, to=100)
Ly<-function(x){
sum((dat$y-pred(x,b1))^2)
}
Ly(1)
Ly(1:2)
Ly(2)
plot(Ly( 1:250) , from = 0, to=100)
eq = function(x){x*x}
plot(eq(1:1000), type='l')
eq(1:20)
seq(-.2,1.2,by=.01)
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
dim( cov(DM) )
N<-ncol(votes[,-1])
M<-1/N*  t( DM ) %*% DM
m<-1/N * Reduce( '+' , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
round(M[1:5,1:5] ,2)
round(M[1:5,1:5] ,2)-m[1:5,1:5]
round( round(M[1:5,1:5] ,2)-m[1:5,1:5] , 3)
all( (round( round(M[1:5,1:5] ,2)-m[1:5,1:5] , 3)) == 0)
all( (round( round(M[1:5,1:5] ,3)-m[1:5,1:5] , 3)) == 0)
all( (round( round(M[1:5,1:5] ,2)-m[1:5,1:5] , 1)) == 0)
all( (round( round(M[1:5,1:5] ,2)-m[1:5,1:5] , 12)) == 0)
round(M-m,12)
all( ( round( (99/100*cov(DM)  - M),12 )  ) ==0)
all( ( round(round(M  ,2)-m,1) ) ==0)
all( ( round(round(99/100*cov(DM)   ,2)-m,1) ) ==0)
all( round(( round(round(99/100*cov(DM)   ,2)-m,1) ),4) ==0)
all( (round( round(M  ,2)-m  , 12)) == 0)
options(digits=12)
str(m)
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
m[[1]][1:5,1:5]
dim(m[[1]])
mm<-matrix(0,542,542)
for(i in 1:N){ mm<-mm+m[[i]] }
all( (round( round(M  ,2)-mm  , 12)) == 0)
M[1:5,1:5]
round(M  ,2)
round(M  ,2)-mm
mm
mm<-1/N*mm
all( (round( round(M  ,2)-  mm , 12)) == 0)
round( round(M  ,2)-  mm , 12)
round( (round(M  ,2)-  mm) , 12)
which( round( (round(M  ,2)-  mm) , 12) >0)
max( round( (round(M  ,2)-  mm) , 12)  )
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
dim( cov(DM) )
head(voes)
head(votes)
m<-list()
for(i in 1:N){m[[i]]<-as.matrix(vote[,i]) %*% as.matrix(t(vote[,i]))  }
m[[1]][1:5,1:5]
dim(m[[1]])
mm<-matrix(0,542,542)
for(i in 1:N){ mm<-mm+m[[i]] }
mm<-1/N*mm
DM
dm
head(votes)
head(vote)
dm<-list()
DM
head(vote)
dim(vote)
dm<-matrix(NA,542,100)
for(i in 1:100){ dm[,i]<-vote[,i] - mean(vote[,i])}
dm[1,1]
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
DM[1,1]
dm<-t(dm)
dm
1/N * t(dm) %*% dm
dm<- 1/N * t(dm) %*% dm
dm[1:5,1:5]
for(i in 1:100){ dm[,i]<-vote[,i] - mean(vote[,i])}
dm[1,1]
dm<-t(dm)
dm<- 1/N * t(dm) %*% dm
cov(dm)
cov(dm)[1:5,1:5]
(1/N * t(dm) %*% dm ) [1:5,1:5]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
1/100 * t(vote) %*% vote
(1/100 * t(vote) %*% vote)[1,1]
m<- as.matrix(votes[,-1])
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
vote<- as.matrix(votes[,-1])
tail(votes)
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
M<-(1/100 * t(vote) %*% vote)[1,1]
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
m<- as.matrix(votes[,-1])
m<- as.matrix(votes[,-1])
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
M<-(1/100 * t(vote) %*% vote)[1,1]
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
m<- as.matrix(votes[,-1])
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
m<-list()
for(i in 1:100){ m[[i]]<- vote[,i]%*%t(vote[,i])   }
mm<-matrix(0,542,542)
for(i in 1:100){ mm<-  mm+m[[i]]   }
mm[1,1]
vote[1,1]
M[1,1]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
M<-(1/100 * t(vote) %*% vote)[1,1]
M[1,1]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
M<-(1/100 * t(vote) %*% vote)
M[1,1]
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
m<-list()
for(i in 1:100){ m[[i]]<- vote[,i]%*%t(vote[,i])   }
mm<-matrix(0,542,542)
for(i in 1:100){ mm<-  mm+m[[i]]   }
mm[1,1]
1/100*mm
mm<-1/100*mm
mm[1,1]
M[1,1]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
for(i in 1:100){vote[,i]<-vote[,i]-mean(vote[,i])}
vote[1,1]
vote<- as.matrix(votes[,-1])
vote<- apply( vote , 2, function(y) y - mean(y))
vote
vote[1,1]
t(vote)[1,1]
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
DM[1,1]
DM<-apply(  ( (votes[,-1])), 2, function(y) y - mean(y))
DM[1,1]
DM<-apply(  ( t(votes[,-1])), 2, function(y) y - mean(y))
DM[1,1]
DM<-apply(  (  (votes[,-1])), 2, function(y) y - mean(y))
DM[1,1]
t(vote)[1,1]
vote<- as.matrix(votes[,-1])
vote<- apply( vote , 2, function(y) y - mean(y))
vote<-t(vote)
vote<- apply( vote , 2, function(y) y - mean(y))
vote[1,1]
DM <-t(as.matrix(votes[,-1]))
X <-t(as.matrix(votes[,-1]))
M <-t(X) %*%X
M[1,1]
M[1:5,1:5]
cov(votes[,-1])
(99/100*cov(DM))[1:5,1:5]
M[1:5,1:5]
(99/100*cov(DM))[1:5,1:5]
tail(votes)
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
DM[1:5,1:5]
M<-1/N* t( DM ) %*% DM
M[1:5,1:5]
m<-1/N * Reduce( '+'    , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
m<-1/N * Reduce( '+'    , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
n=100
N=100
m[1:5,1:5]
m<-1/N * Reduce( '+'    , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
tail(vote)
vote<-votes[,-1]
m<-1/N * Reduce( '+'    , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
head(vote)
Reduce( '+'    , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m<-1/N * Reduce( '+' , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
rm(list = ls())
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<- as.matrix(votes[,-1])
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
dim( cov(DM) )
N<-ncol(votes[,-1])
M<-1/N*  t( DM ) %*% DM
m<-1/N * Reduce( '+' , lapply(
split(vote, rep(1:ncol(vote), each = nrow(vote))),
function(y) y%*%t(y) ) )
m[1:5,1:5]
M[1:5,1:5]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<-votes[,-1]
head(vote)
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
M<-1/N* t( DM ) %*% DM
M[1:5,1:5]
getwd()
rm(list = ls())
setwd("g:\\math\\504")
library(ggplot2)
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
vote<-votes[,-1]
head(vote)
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
M<-1/N* t( DM ) %*% DM
M[1:5,1:5]
N=100
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
M<-1/N* t( DM ) %*% DM
M[1:5,1:5]
DM[1:5,1:5]
M<-  t( DM ) %*% DM
M[1:5,1:5]
DM<-apply( t(as.matrix(votes[,-1])), 2, function(y) y - mean(y))
DM[1:5,1:5]
t( DM ) %*% DM
M<-  t( DM ) %*% DM
M[1:5,1:5]
M<-  round( t( DM ) %*% DM , 5)
M[1:5,1:5]
votes<-read.table("votes_formatted.txt",stringsAsFactors=F,header=T)
tail(votes)
DM<-apply( t(as.matrix(vote )), 2, function(y) y - mean(y))
DM[1:5,1:5]
M<-    t( DM ) %*% DM
M[1:5,1:5]
DM
round(DM,10)
M<-    t( DM ) %*% DM
M[1:5,1:5]
round(DM,2)
M<-    t( DM ) %*% DM
M[1:5,1:5]
