rm(list=ls())
library(readxl)
options(scipen=999)
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
knitr::opts_chunk$set(echo = TRUE)
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
head(dat)
install.packages("readxl")
head
head(dat)
dat
head(dat)
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
head(dat)
dat
dat$V4 = dat$V3-dat$V2
dat
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
dat
dat[8:14,1]<-dat[8:14,1]*100
dat
dat$V4 = dat$V3-dat$V2
dat
dat$V4 = dat$V2-dat$V3
dat
dat[8:14,1:2]<-dat[8:14,1:2]*100
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
dat[8:14,1:2]<-dat[8:14,1:2]*100
dat$V4 = dat$V2-dat$V3
dat
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
dat
dat$v4<-dat$V2 - dat$V3
dat
96.5-94.72
94.72-96.5
95.25-85.57
dat
III2<-dat[1:7,]
III3<-dat[7:nrow(dat),]
III2
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,]
III3<-dat[7:nrow(dat),]
III2
III3
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III2)<-c("gap","target","result")
III2
III3
III3<-III3[,c(3,2,1)]
III2
III3
III3<-dat[8:nrow(dat),];names(III2)<-c("gap","target","result")
III3<-III3[,c(3,2,1)]
III2
III3
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III2)<-c("gap","target","result")
III3
III3[,c(3,2,1)]
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","target","result")
III3
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3
III3<-III3[,c(3,2,1)]
III3
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3<-III3[,c(2,3,1)]
III2
III3
III2$FY2017-III2$FY2016
III2$FY2017
III2$FY17-III2$FY16
III2$difference<-III2$FY17-III2$FY16
III2
III2$difference == III2$PPI
III2$PPI
III2$difference
str(III2)
III2
options(digits=10)
III2
III2$difference
III2$PPI
III2$difference != III2$PPI
III2$difference - III2$PPI
III2<-round(II2)
III2<-round(III2,2)
III2
III2$difference<-III2$FY17-III2$FY16
III2$difference - III2$PPI
III2$difference = III2$PPI
III2$difference == III2$PPI
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3<-III3[,c(2,3,1)]
III2<-round(III2,2)
III3<-round(III2,3)
options(digits=10)
III2$difference<-III2$FY17-III2$FY16
III2$difference == III2$PPI
III2
III2$TF<-III2$difference == III2$PPI
III2
III2$difference
III2$PPI
III2$difference == round(III2$PPI,2)
round(III2$difference,2) == III2$PPI
III2$difference
options(digits=16)
III2$difference
III2$FY17
read.table( "G:\\2803\\MATH1.txt")
read.table( "G:\\2803\\MATH1.txt")
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3<-III3[,c(2,3,1)]
III2
round(III2,2)
round(III2$FY17,2)
round(III2$FY17)
round(III2$FY17,3)
round(III2$FY17,2)
III2
III2[2,2]<-85.6
III2[2,2]<-85.57
III2
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3<-III3[,c(2,3,1)]
III2[2,2]<-85.57
III2
III2
dat
dat<-as.data.frame(read.csv("G:\\2803\\MATH.csv", header=F))
III2<-dat[1:7,];names(III2)<-c("PPI","FY17","FY16")
III3<-dat[8:nrow(dat),];names(III3)<-c("gap","result","target")
III3<-III3[,c(2,3,1)]
III2
III2$FY17-III2$FY16
III2
III2$diff<-III2$FY17-III2$FY16
III2$diff == III2$PPI
III2$diff<-round(III2$FY17-III2$FY16,2)
III2$diff == III2$PPI
III2$check<-III2$diff == III2$PPI
III2
III3
III3$diff<-round(III3$target-III3$result,2)
III3
III3$check<-III3$diff == III3$gap
III3
rm(list = ls())
library(expm)
install.packages("expm")
library(expm)
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x	}
rowSums(mat)
Re(eigen(t(mat))$vectors[,1]) / Re( sum(eigen(t(mat))$vectors[,1])  )
mat
which(mat[i,] > 0)
which(mat[3,] > 0)
i=3
which(mat[i,] > 0)
mat<-matrix(0,5,5)
for( i in 1:5){
repeat{
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
if(which(mat[i,] > 0) != 1 ) {break} }
}
t
mat<-matrix(0,5,5)
y<-sample(1:5,sample(2:5,1))
y
y<-sample(1:5,sample(2:5,1))
y
mat
mat<-matrix(0,5,5)
for( i in 1:5){
repeat{
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
if(which(mat[i,] > 0) != 1 ) {break} }
}
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(seq(0,1,.1),length(y))
x<-x/sum(x)
mat[i,y]<-x
#if(which(mat[i,] > 0) != 1 ) {break} }
}
mat
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
y<-sample(1:5,sample(2:5,1));y
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(1:10,length(y))
x<-x/sum(x)
mat[i,y]<-x
}
mat
rowSums(mat)
mat<-matrix(0,5,5)
for( i in 1:5){
y<-sample(1:5,sample(2:5,1))
x<-sample(1:10,length(y))
x<-x/sum(x)
mat[i,y]<-x
}
mat
rowSums(mat)
Re(eigen(t(mat))$vectors[,1]) / Re( sum(eigen(t(mat))$vectors[,1])  )
mat%^%100
p=.15
m=5
matB<-matrix(1/n,n,n)
rowSums( (1-p) * mat )
rowSums( ( p) * matB)
matB<-matrix(1/m,m,m)
rowSums( (1-p) * mat )
rowSums( ( p) * matB)
head(setdiff(edge$V2,edge$V1))
matA<-(1-p) * mat + ( p) * matB
rowSums( matA)
xx<-1:5
system.time(
repeat{
y<-xx
xx<- (t(mat)%*%xx)  / norm((t(mat)%*%xx))
xx
if( norm(xx-y) < 10^-16 ) {break} }
)
rowSums(A)
xx
mat%^%100
Re(eigen(t(mat))$vectors[,1]) / Re( sum(eigen(t(mat))$vectors[,1])  )
x<-sample(1:10,m,replace=T)
repeat{
y<-x
x<- ( (1-p) * t(mat) %*%x ) + ( rep( (1/m)* p * sum(x),m) ) /
norm(( (1-p) * t(mat) %*%x ) + ( rep( (1/m)* p * sum(x),m) ))
if( norm(x-y) < 10^-14 ) {break} }
x
setwd("g:\\math\\504")
edge<-read.table("edges.txt")
node<-read.table("nodes.txt")
options(scipen=999)
G<-matrix(0,max(edge),max(edge))
n=max(edge)
for( i in 1:max(edge) ) {
if( length( which(edge[,1]  == i)) == 0 ){ G[i,i]<-1;next}
G[i,edge[ which(edge[,1]  == i) ,2]]<-1 }
G<- apply(G, 2, "/",  rowSums(G)  )
B<-matrix(1/n,n,n)
p=.15
A<-(1-p) * G + ( p) * B
all(round(rowSums(A),15) == 1)
x<-sample(1:10,max(edge),replace=T)
system.time(
repeat{
y<-x
x<- (t(A)%*%x)  / norm((t(A)%*%x))
if( norm(x-y) < 10^-6 ) {break} }
)
x<-sample(1:10,max(edge),replace=T)
system.time(
repeat{
y<-x
x<- ( (1-p) * t(G) %*%x ) + ( p  * B %*% x ) /
norm(( (1-p) * t(G) %*%x ) + ( p  * B %*% x ))
if( norm(x-y) < 10^-6 ) {break} }
)
node[,1]<-x
head( node[with(node, order(V1,decreasing = T)), ] , 20)
nodes<-read.table("nodes.txt")
rm(B)
x<-sample(1:10,max(edge),replace=T)
system.time(
repeat{
y<-x
x<- ( (1-p) * t(G) %*%x ) + ( rep( (1/n)* p * sum(x),n) ) /
norm(( (1-p) * t(G) %*%x ) + ( rep( (1/n)* p * sum(x),n) ))
if( norm(x-y) < 10^-6 ) {break} }
)
nodes[,1]<-x
head( nodes[with(nodes, order(V1,decreasing = T)), ] , 10)
head( node[with(node, order(V1,decreasing = T)), ] , 10)
library(Matrix)
nodes<-read.table("nodes.txt")
x<-sample(1:10,max(edge),replace=T)
system.time(
repeat{
y<-x
x<- ( (1-p) * t(G) %*%x ) + ( rep( (1/n)* p * sum(x),n) ) /
norm(( (1-p) * t(G) %*%x ) + ( rep( (1/n)* p * sum(x),n) ))
if( norm(x-y) < 10^-6 ) {break} }
)
round(x,5)
round(x,5)
head( nodes[with(nodes, order(V1,decreasing = T)), ] , 10 , row.names = FALSE)
head( nodes[with(nodes, order(V1,decreasing = T)), ] , 10 , row.names = FALSE)
blerg<-head( nodes[with(nodes, order(V1,decreasing = T)), ] , 10)
print(blerg,row.names=F)
print(blerg,row.names=F)
head(nodes)
print( head( nodez[with(nodez, order(P,decreasing = T)), ] , 10), row.names=F)
p=.15
nodez
print(head( nodes[with(nodes, order(P,decreasing = T)), ] , 10),row.names=F)
edge<-read.table("edges.txt")
nodez<-read.table("nodes.txt")
library(Matrix)
dat<-data.frame(setdiff(edge$V2,edge$V1), setdiff(edge$V2,edge$V1))
names(dat)<-names(edge)
edge<-rbind(edge,dat)
rm(dat)
dat<-data.frame(setdiff(edge$V1,edge$V2), setdiff(edge$V1,edge$V2))
names(dat)<-names(edge)
edge<-rbind(edge,dat)
rm(dat)
setdiff(edge$V2,edge$V1)
setdiff(edge$V1,edge$V2)
edge$V3<-1
edge[nrow(edge),3]<-edge[(nrow(edge)-1),3]<-0
A <- sparseMatrix(i = edge$V1, j = edge$V2, x = edge$V3)
A <- A/rowSums(A)
n=dim(A)[1]
p=.15
x<-sample(1:10,n,replace=T)
system.time(
repeat{
y<-x
x<- as.matrix( (1-p) * t(A) %*%x ) + ( rep( (1/n)* p * sum(x),n) ) /
norm(( (1-p) * t(A) %*%x ) + ( rep( (1/n)* p * sum(x),n) ))
if( norm(x-y) < 10^-6 ) {break} }
)
nodez$P<-round(x,5)
print( head( nodez[with(nodez, order(P,decreasing = T)), ] , 10), row.names=F)
print( head( nodes[with(nodes, order(P,decreasing = T)), ] , 10), row.names=F)
print( head( nodez[with(nodez, order(P,decreasing = T)), ] , 10), row.names=F)
head(nodes)
