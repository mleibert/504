a
a
rm(list = ls())
options(scipen=999)
setwd("G:\\math\\504")
#require(ggplot2,quietly=T)
source("nnfunctions.R")
nn<-read.table("nn.txt",header=T)
X<-as.matrix(nn[,-3])
#p <- ggplot(nn, aes(x1, x2)) + geom_point(aes(colour = factor(y))) +
#  theme(legend.position="bottom")
#p
#set.seed(2221)
#x=nn[,-3];y=nn[,3];eta=a;m=4
set.seed(2221)
a<- runif(22,-1,1)
head(NN(nn[,-3],a,4))
logL(nn[,-3],nn[,3],a,4)
gradL(nn[,-3],nn[,3],a,4)
#start
HH<-matrix(NA,22,22)
for(i in 1:22){ HH[,i]<-Hfd(nn[,-3],nn[,3],a,4,diag(22)[,i]) }
lambda=-min(eigen(HH)$values)+.25
B<-HH+lambda*diag(22)
eigen(B)$values
x<-rep(0,22)
d<-r<- gradL(nn[,-3],nn[,3],a,4) - B%*%x
iter=0
repeat{
iter=iter+1
Alpha<-as.numeric(  (t(r)%*%r)/(t(d)%*%B%*%d) )
xnext<-x+Alpha*d
rnext<-r-Alpha*B%*%d
if( all(as.numeric( round(rnext,10) ) == 0) == T ){print(xnext)}
#store p in lsit for future BACKTRACKING
if( all(as.numeric( round(rnext,10) ) == 0) == T ){break}
Beta<- as.numeric((t(rnext)%*%rnext)/(t(r)%*%r))
dnext<-rnext+Beta*d
d<-dnext;r<-rnext;x<-xnext
}
xnext;iter
z<-xnext
write.csv("b.csv",xnext)
write.csv(xnext,"b.csv")
t(z)
t(z)
Alpha<-c(-3.7748365, 2.1178734, 0.3139542, -5.5415006, -.5958018, 5.8168459, 11.0561352, 0.2074085, 14.0207743, 25.2868297, 16.0428078, 3.8300725, 15.9792114, 23.4815794, 23.2210775, -13.5097426, -12.2073593, -18.6510642, -27.0546378, -27.4979835, 15.2350215, 14.7081561)
source("multiplot.R")
test<-as.data.frame((NN(nn[,-3],Alpha ,4)))
test<-cbind(test,nn[,-3])
test$y3<- ifelse( test[,1]>.5 , 0,1)
p <- ggplot(nn, aes(x1, x2)) + geom_point(aes(colour = factor(y))) +
theme(legend.position="bottom")
require(ggplot2)
p <- ggplot(nn, aes(x1, x2)) + geom_point(aes(colour = factor(y))) +
theme(legend.position="bottom")
p
#Alpha is eta (alphas and betas)
Alpha
test
multiplot(ggplot(test, aes(x1, x2)) + geom_point(aes(colour = factor(y3))) +
theme(legend.position="bottom")+ ggtitle("Test")   ,p + ggtitle("Actual") ,  cols=2 )
z
Alpha<-z
test<-as.data.frame((NN(nn[,-3],Alpha ,4)))
test<-cbind(test,nn[,-3])
test$y3<- ifelse( test[,1]>.5 , 0,1)
names(test)[3:4]<-c("x1","x2")
multiplot(ggplot(test, aes(x1, x2)) + geom_point(aes(colour = factor(y3))) +
theme(legend.position="bottom")+ ggtitle("Test")   ,p + ggtitle("Actual") ,  cols=2 )
iter
rm(list = ls())
options(scipen=999)
setwd("G:\\math\\504")
#require(ggplot2,quietly=T)
source("nnfunctions.R")
nn<-read.table("nn.txt",header=T)
X<-as.matrix(nn[,-3])
#p <- ggplot(nn, aes(x1, x2)) + geom_point(aes(colour = factor(y))) +
#  theme(legend.position="bottom")
#p
#set.seed(2221)
#x=nn[,-3];y=nn[,3];eta=a;m=4
set.seed(2221)
a<- runif(22,-1,1)
head(NN(nn[,-3],a,4))
logL(nn[,-3],nn[,3],a,4)
gradL(nn[,-3],nn[,3],a,4)
#start
HH<-matrix(NA,22,22)
for(i in 1:22){ HH[,i]<-Hfd(nn[,-3],nn[,3],a,4,diag(22)[,i]) }
lambda=-min(eigen(HH)$values)+.25
B<-HH+lambda*diag(22)
eigen(B)$values
x<-rep(0,22)
d<-r<- gradL(nn[,-3],nn[,3],a,4) - B%*%x
iter=0
#some compariosns
ddd<-gradL(nn[,-3],nn[,3],a,4)
HH%*%ddd
Hfd(nn[,-3],nn[,3],a,4,ddd,epi=(10^-7) *9)-HH%*%ddd
eigen(HH)$values
B<-HH+lambda*diag(22)
B%*%ddd
( as.vector(B%*%ddd)-(
Hfd(nn[,-3],nn[,3],a,4,ddd,epi=(10^-7) *9)  + lambda * ddd
))
repeat{
iter=iter+1
Alpha<-as.numeric(  (t(r)%*%r)/(t(d)%*%B%*%d) )
xnext<-x+Alpha*d
rnext<-r-Alpha*B%*%d
if( all(as.numeric( round(rnext,10) ) == 0) == T ){print(xnext)}
#store p in lsit for future BACKTRACKING
if( all(as.numeric( round(rnext,10) ) == 0) == T ){break}
Beta<- as.numeric((t(rnext)%*%rnext)/(t(r)%*%r))
dnext<-rnext+Beta*d
d<-dnext;r<-rnext;x<-xnext
}
iter
xnext
